PROCEDURE dot_product(VAR v1,v2: ARRAY_OF INTEGER[3])
VAR
    i: INTEGER;
    ps : INTEGER := 0;
BEGIN
    FOR i FROM 0 TO 2 STEP 1  DO
        ps:= ps +v1[i]*v2[i]
    END_FOR
END


ALGORITHM product
VAR
    n,i,j,k : INTEGER;
    v1,v2 : ARRAY_OF INTEGER[3];
    v_pairs:ARRAY_OF ARRAY[2]
    v_tot : ARRAY_OF ARRAY[n];  //example of v_tot [[[1,2,3],[4,5,6]],[[8,54,5],[14,45,6]]]=>[[v1,v2],[v3,v4]]=>[vpairs,vpairs]
BEGIN

//reading the whole array of pairs then reading each pairs
    FOR i FROM 0 TO n-1   DO
        read(v_tot[i])
    END_FOR
    
    FOR i FROM 0 TO 1   DO
        read(v_pairs[i])
    END_FOR


    FOR i FROM 0 TO v1.length-1   DO
        read(v1[i])
    END_FOR

    FOR i FROM 0 TO v2.length-1   DO
        read(v2[i])
    END_FOR

    FOR i FROM 0 TO n-1  DO
        FOR j FROM 0 TO 1 STEP 1  DO
            FOR k FROM 0 TO 2 STEP 1  DO
                dot_product(v1,v2);  //invocking the procedure then comparing
                        IF (ps=0) THEN
            Write("v1 and v2 are orthogonal");
                        ELSE
            Write("v1 and v2 are not orthogonal ");
        END_IF
            END_FOR
        END_FOR
    END_FOR
END



//changing procedure with function
FUNCTION dot_product(v1,v2: ARRAY_OF INTEGER) : INTEGER
VAR
    i : INTEGER;
    ps : INTEGER:=0;
BEGIN
    FOR i FROM 0 TO 2 STEP 1  DO
        ps:= ps +v1[i]*v2[i]
    END_FOR
    RETURN ps ;
END


ALGORITHM product
VAR
    n,i,j,k,ps : INTEGER;
    v1,v2 : ARRAY_OF INTEGER[3];
    v_pairs:ARRAY_OF ARRAY[2]
    v_tot : ARRAY_OF ARRAY[n];  //example of v_tot [[[1,2,3],[4,5,6]],[[8,54,5],[14,45,6]]]=>[[v1,v2],[v1,v2]]=>[vpairs,vpairs]
BEGIN

//reading the whole array of pairs then reading each pairs
    FOR i FROM 0 TO n-1   DO
        read(v_tot[i])
    END_FOR
    
    FOR i FROM 0 TO 1   DO
        read(v_pairs[i])
    END_FOR


    FOR i FROM 0 TO v1.length-1   DO
        read(v1[i])
    END_FOR

    FOR i FROM 0 TO v2.length-1   DO
        read(v2[i])
    END_FOR
    FOR i FROM 0 TO n-1  DO
        FOR j FROM 0 TO 1 STEP 1  DO
            FOR k FROM 0 TO 2 STEP 1  DO
              ps:=dot_product(v1,v2);
  //invocking the procedure then comparing
                        IF (ps=0) THEN
            Write("v1 and v2 are orthogonal");
                        ELSE
            Write("v1 and v2 are not orthogonal ");
        END_IF
            END_FOR
        END_FOR
    END_FOR
END